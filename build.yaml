steps:
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'get-key'
    entrypoint: 'bash'
    dir: .
    args:
    - '-c'
    - |
      gcloud secrets versions access latest --secret="github" --project="eventrun" > /root/.ssh/id_rsa
    volumes:
    - name: 'ssh'
      path: /root/.ssh
  - name: 'gcr.io/cloud-builders/git'
    id: 'add-key'
    entrypoint: 'bash'
    dir: .
    args:
    - '-c'
    - |
      chmod 600 /root/.ssh/id_rsa
      cat <<EOF >/root/.ssh/config
      Hostname github.com
      IdentityFile /root/.ssh/id_rsa
      EOF
      ssh-keyscan -t rsa github.com > /root/.ssh/known_hosts
    volumes:
    - name: 'ssh'
      path: /root/.ssh
  - name: 'gcr.io/cloud-builders/git'
    id: 'crlf'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      git config --global core.autocrlf input
      git reset --hard
      git clean -fdx
    volumes:
    - name: 'ssh'
      path: /root/.ssh
  - name: 'gcr.io/cloud-builders/git'
    id: 'get-diffs'
    entrypoint: 'bash'
    args: [
      '/workspace/scripts/get_diffs.sh'
    ]
    volumes:
    - name: 'ssh'
      path: /root/.ssh
    env: [
      'BASE_REPO_URL=git@github.com:terekete/eventrun_test.git',
      'BASE_BRANCH=${_BASE_BRANCH}',
      'PR_NUMBER=${_PR_NUMBER}',
    ]
  - name: 'gcr.io/cloud-builders/git'
    id: 'create-staging-dir'
    entrypoint: 'bash'
    args:
    - -exc
    - |
      mkdir staging
  - name: 'gcr.io/eventrun/pulumi:latest'
    id: 'build-sa'
    entrypoint: 'bash'
    args: [
      '/workspace/scripts/build_sa.sh'
    ]
    env: [
      'PROJECT_ID=${_KEY_PROJECT}'
    ]
  # - name: 'gcr.io/cloud-builders/gcloud'
  #   id: 'build-artifact'
  #   entrypoint: 'bash'
  #   args:
  #     - '-c'
  #     - |
  #       echo "Creating artifact to: ${_ARTIFACT_BUCKET}"
  #       commit=$(cat commit.txt)
  #       apt-get -qq update
  #       apt-get install -qq -o=Dpkg::Use-Pty=0 -y zip
  #       zip -qqr "${commit}.zip" . -x ./.git/**\*
  #       gsutil cp "${commit}.zip" "gs://${_ARTIFACT_BUCKET}/"
  # - name: 'gcr.io/cloud-builders/gcloud'
  #   id: 'deploy-iac'
  #   entrypoint: 'bash'
  #   args: [
  #     '/workspace/scripts/build_iac.sh'
  #   ]
  #   env: [
  #     'ARTIFACT_BUCKET=${_ARTIFACT_BUCKET}',
  #     'STAGE_PROJECT=${_STAGE_PROJECT}',
  #     'ENV=${_ENV}',
  #     'CUSTOM_TAG=${_CUSTOM_TAG}'
  #   ]
  #   waitFor: ['build-sa']


options:
  substitution_option: 'ALLOW_LOOSE'

substitutions:
  _KEY_VERISON: "latest"
  _STAGE_PROJECT: "eventrun"
  _BASE_BRANCH: "main"
  _ENV: "np"
  _CUSTOM_TAG:
  _ARTIFACT_BUCKET: "eventrun-artifacts"

timeout: 600s
